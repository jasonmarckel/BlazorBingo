@page "/play/{gamecode?}"
@page "/host/{gamecode?}"
@inject GameSettings settings
@inject NavigationManager Navigation

<div class="row justify-content-between mx-0 prevent-select">
    <div class="col-auto">
        <label class="col-form-label-sm">Bingo Hall</label>
        <button type="button" class="btn btn-sm" @onclick="CopyGameCode" title="Copy Game Code"><span style="font-family:monospace; font-weight:bold;">@GameCode</span> <span class="symbol">&#128471;</span></button>
        @if (isHost)
        {
            <button type="button" class="btn btn-sm" @onclick="ShowPlayers" title="Show Players"><span class="symbol silhouettebust"></span><span style="visibility: @(isHost ? "visible" : "hidden");">@players.Count</span></button>            
        }
        <label class="col-form-label-sm">Calls @numberOfCalls</label>
        @if (isHost)
        {
            <button type="button" class="btn btn-sm" @onclick="Restart" title="New Game" style="min-width:3rem;"><span class="symbol" style="font-size:14pt; line-height:1rem;">&#8634;</span></button>
        }
    </div>
    <div class="col-auto">
        <button type="button" class="btn btn-sm" @onclick="ShowSettings" title="Settings" style="min-width:3rem;"><span class="gear" style="font-size:14pt; line-height:1rem;"></span></button>
    </div>
</div>

<Flashboard @ref="flashboard" BoardSize="75"></Flashboard>

<div id="BingoCard" class="@settings.CardTheme prevent-select mb-1">
    <table>
        <thead>
            <tr>
                <td>B</td>
                <td>I</td>
                <td>N</td>
                <td>G</td>
                <td>O</td>
            </tr>
        </thead>
        <tbody>
        @for (int r = 0; r < 5; r++)
        {
            <tr>
                @for (int c = 0; c < 5; c++)
                {
                    var square = squares[r, c];                    
                    var row = r;
                    var col = c;
                    <td @onclick="Interop.PrimeSpeechSynthesis">
                        <button type="button" class="square" @onclick="() => StampSquare(row, col)">
                            @if (!square.IsStamped)
                            {
                                @(square.Value.ToString())
                            }
                            else
                            {
                                <div class="emoji" style="transform: rotate(@(square.StampRotation)deg);">@((MarkupString)square.Stamp)</div>
                            }
                        </button>
                    </td>
                }
            </tr>
        }
        </tbody>
    </table>
</div>

<div id="PlayerControls" class="row mb-2 prevent-select">
    @if (isHost)
    {
        <div class="col pt-4 text-center">
            <button type="button" class="btn btn-primary btn-lg" @onclick="Pick" disabled="@isCalling">Pick</button>
        </div>
    }
    <div class="col pt-4 text-center">
        <button type="button" class="btn btn-success btn-lg" title="Bingo" @onclick="CallBingo" hidden="@(!isGameStarted)" disabled="@isBingoButtonClicked">Bingo!</button>
        <button type="button" class="btn btn-secondary btn-lg text-nowrap" title="New card" @onclick="GenerateNewCard" hidden="@isGameStarted">New Card</button>        
    </div>
    <div class="col text-center">
        <GamePatternDisplay Pattern="@selectedPattern"></GamePatternDisplay>        
    </div>
</div>

<div class="prevent-select">
    @notificationMessage
</div>

<dialog id="settingsDialog">
    <form method="dialog" style="display:none">
        <SettingsScreen isGameStarted="@isGameStarted"></SettingsScreen>
    </form>
</dialog>

<dialog id="playersDialog">
    <form method="dialog" style="display:none">
        <div class="card mb-1">
            <div class="card-body">
                <div class="row justify-content-between">
                    <div class="col-auto">
                        <h5 class="card-title">Players</h5>
                    </div>
                    <div class="col-auto">
                        <button type="submit" class="btn btn-outline-secondary" id="closeDialogButton" onclick="this.form.style.display='none';return typeof HTMLDialogElement === 'function'">X</button>
                    </div>
                </div>
            </div>
            <ul>
                <li>@settings.PlayerName (host)</li>
                @foreach (var player in players)
                {
                    <li>@player</li>
                }
            </ul>
        </div>
    </form>
</dialog>