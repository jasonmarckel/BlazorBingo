@page "/"
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using BlazorBingo.Components

<PageTitle>BINGO</PageTitle>

<CascadingValue Value="@settings">
    @if (gameMode == GameMode.Initializing)
    {
        <div class="row">
            <label for="playerName" class="col-sm-2 col-form-label">Name</label>
            <div class="col-sm-10">
                <input type="text" id="playerName" class="form-control" value="@settings!.PlayerName" @onchange="NameChanged" placeholder="player name" />            
            </div>
        </div>
        <div class="row">
            <label for="gameCode" class="col-sm-2 col-form-label">Bingo Hall</label>
            <div class="col-auto">
                <input type="text" id="gameCode" class="form-control" value="@gameCode" placeholder="enter code" />
            </div>
            <div class="col-auto">
                <button type="button" class="btn btn-primary" @onclick="Join">Join</button>
            </div>
            <div class="col-auto">
                <button type="button" class="btn btn-outline-secondary" @onclick="Host">Host</button>
            </div>
        </div>
    }
    @if (gameMode == GameMode.Playing)
    {<BingoCard HostCode="@gameCode"></BingoCard>}
    @if (gameMode == GameMode.Calling)
    {<BingoCaller></BingoCaller>}
</CascadingValue>

@code {
    protected Settings settings = new ();

    string gameCode = string.Empty;

    public enum GameMode
    {
        Initializing,
        Starting,
        Joining,
        Waiting,
        Playing,
        Hosting,
        Calling
    }

    protected GameMode gameMode;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            settings.PlayerName = await localStorage.GetItemAsync<string>("playerName");
            settings.GamesPlayed = await localStorage.GetItemAsync<int>("gamesPlayed");
            settings.GamesWon = await localStorage.GetItemAsync<int>("gamesWon");
            gameMode = GameMode.Initializing;
#if DEBUG
            gameCode = "X4DZ";
#endif
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    async Task NameChanged(ChangeEventArgs e)
    {
        settings!.PlayerName = e?.Value?.ToString() ?? string.Empty;
        await localStorage.SetItemAsync("playerName", settings!.PlayerName);
    }
    private void Host()
    {
        gameMode = GameMode.Calling;
    }
    private void Join()
    {
        gameMode = GameMode.Playing;
    }
}