@page "/"
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using BlazorBingo.Components

<PageTitle>BINGO</PageTitle>

<CascadingValue Value="@settings">
    @if (gameState == GameState.Startup)
    {
        <div class="row mb-2">
            <label for="playerName" class="col-sm-2 col-form-label">Name</label>
            <div class="col-auto">
                <input type="text" id="playerName" class="form-control" @bind="settings!.PlayerName" placeholder="player name" />
            </div>
            <div class="col-auto">
                <button type="button" class="btn btn-outline-secondary" @onclick="Host">Host</button>
            </div>
        </div>
        <div class="row mb-2">
            <label for="gameCode" class="col-sm-2 col-form-label">Bingo Hall</label>
            <div class="col-auto">
                <input type="text" id="gameCode" class="form-control gameCode" @bind="gameCode" placeholder="enter code" />
            </div>
            <div class="col-auto">
                <button type="button" class="btn btn-primary" @onclick="Join">Join</button>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2"></div>
            <div class="col-auto">
                <small>version <code style="color: inherit;">23.01.12.02</code></small>
            </div>
            <div class="col-auto">
                <button type="button" class="btn btn-outline-secondary" title="Settings" @onclick="ChangeOptions"><span class="gear"></span></button>
            </div>
        </div>
    }
    @if (gameState == GameState.Play)
    {
        <BingoCard GameCode="@gameCode"></BingoCard>
    }
    @if (gameState == GameState.Host)
    {
        <BingoCaller></BingoCaller>
    }
    @if (gameState == GameState.Options)
    {
        <GameOptions @ref="settings"></GameOptions>        
    }
</CascadingValue>

@code {
    protected GameOptions? settings;

    protected string gameCode = string.Empty;

    public enum GameState
    {
        Startup,
        Play,
        Host,
        Options
    }

    protected GameState gameState;

    protected override async Task OnInitializedAsync()
    {
        settings = new GameOptions();
        try
        {
            gameState = GameState.Startup;
#if DEBUG
    gameCode = "0000";
#endif
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private void Host()
    {
        gameState = GameState.Host;
    }
    private void Join()
    {
        gameState = GameState.Play;
    }
    private void ChangeOptions()
    {
        gameState = GameState.Options;
    }
}